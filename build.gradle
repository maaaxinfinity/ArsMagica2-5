buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "gt6-maven"
            url = "https://gregtech.mechaenetia.com/"
        }
        maven {
            name = "gtnh"
            url = "http://jenkins.usrv.eu:8081/nexus/content/groups/public/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2.11'
    }
}

repositories {
	maven {
		name = "gt"
		url = "https://gregtech.mechaenetia.com/"
	}
}

apply plugin: 'forge'

version = "1.6.4"
group= "am2" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "AM2"
sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"
    //mappings = "stable_12"  //uncomment this line to use newest Forge mappings. Needs a lot of rework.
}

jar {
	manifest {
		attributes 'FMLCorePlugin' : 'net.tclproject.mysteriumlib.asm.fixes.MysteriumPatchesFixLoaderMagicka'
		attributes 'FMLCorePluginContainsFMLMod' : 'true'
        attributes 'FMLAT': 'arsmagica2_at.cfg'
	}
}

task devJar(type: Jar) {
	manifest {
		attributes 'FMLCorePlugin' : 'net.tclproject.mysteriumlib.asm.fixes.MysteriumPatchesFixLoaderMagicka'
		attributes 'FMLCorePluginContainsFMLMod' : 'true'
        attributes 'FMLAT': 'arsmagica2_at.cfg'
	}
	classifier = 'dev'
	from sourceSets.main.output
}

task sourceJar(type: Jar) {
	manifest {}
	classifier = 'sources'
	from sourceSets.main.allSource
}

reobf {
}

artifacts {
	archives devJar, sourceJar
}

dependencies {
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand (
                'version': project.version,
                'mcversion': project.minecraft.version
        )
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

if (!hasProperty("mavenUsername")) {
	ext.mavenUsername="${System.getenv().MAVEN_USERNAME}"
}

if (!hasProperty("mavenPassword")) {
	ext.mavenPassword="${System.getenv().MAVEN_PASSWORD}"
}

if (!hasProperty("mavenURL")) {
	ext.mavenURL="${System.getenv().MAVEN_URL}"
}

uploadArchives {
	repositories {
		mavenDeployer {
			repository(url: mavenURL) {
				authentication(userName: mavenUsername, password: mavenPassword)
			}
		}
	}
}
